name: Auto Tag on Version Change

on:
  push:
    branches: [main]

jobs:
  detect-and-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🧰 Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: 🔧 Configure git author
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"

      - name: 🔑 Use PAT for pushes
        # on réécrit l'URL 'origin' pour que git push utilise le PAT
        run: |
          git remote set-url origin \
            https://x-access-token:${{ secrets.PAT_WORKFLOW }}@github.com/${{ github.repository }}.git

      - name: 🔍 Get previous commit
        id: prev
        run: echo "sha=$(git rev-parse HEAD~1)" >> $GITHUB_OUTPUT

      - name: 📦 Check client version change
        id: client
        run: |
          OLD_VERSION=$(git show ${{ steps.prev.outputs.sha }}:client/package.json | jq -r .version)
          NEW_VERSION=$(jq -r .version client/package.json)
          echo "old=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "changed=$([ "$OLD_VERSION" != "$NEW_VERSION" ] && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: 📦 Check backend version change
        id: backend
        run: |
          OLD_VERSION=$(git show ${{ steps.prev.outputs.sha }}:server/package.json | jq -r .version)
          NEW_VERSION=$(jq -r .version server/package.json)
          echo "old=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "changed=$([ "$OLD_VERSION" != "$NEW_VERSION" ] && echo true || echo false)" >> $GITHUB_OUTPUT

      - name: 🏷 Tag client if version changed
        if: steps.client.outputs.changed == 'true'
        run: |
          TAG="client/${{ steps.client.outputs.new }}"
          echo "Creating & pushing $TAG"
          git tag "$TAG"
          git push origin "$TAG"

      - name: 🏷 Tag backend if version changed
        if: steps.backend.outputs.changed == 'true'
        run: |
          TAG="backend/${{ steps.backend.outputs.new }}"
          echo "Creating & pushing $TAG"
          git tag "$TAG"
          git push origin "$TAG"
