name: Auto Tag on Version Change

on:
  push:
    branches:
      - main

jobs:
  detect-and-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # important pour pouvoir pousser des tags

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # n√©cessaire pour comparer l‚Äôhistorique

      - name: üß∞ Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: üîß Git identity
        run: |
          git config user.name "actions-bot"
          git config user.email "actions-bot@users.noreply.github.com"

      - name: üîç Get previous commit
        id: prev
        run: echo "sha=$(git rev-parse HEAD~1)" >> $GITHUB_OUTPUT

      - name: üì¶ Check client version change
        id: client
        run: |
          OLD_VERSION=$(git show ${{ steps.prev.outputs.sha }}:client/package.json 2>/dev/null | jq -r .version || echo "0.0.0")
          NEW_VERSION=$(jq -r .version client/package.json)
          echo "old=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT
          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: üì¶ Check backend version change
        id: backend
        run: |
          OLD_VERSION=$(git show ${{ steps.prev.outputs.sha }}:server/package.json 2>/dev/null | jq -r .version || echo "0.0.0")
          NEW_VERSION=$(jq -r .version server/package.json)
          echo "old=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT
          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: üè∑ Tag client if version changed
        if: steps.client.outputs.changed == 'true'
        env:
          PAT: ${{ secrets.PAT_WORKFLOW }}
        run: |
          TAG="client/${{ steps.client.outputs.new }}"
          echo "Creating tag $TAG"
          git tag "$TAG"
          git push "https://x-access-token:${PAT}@github.com/${{ github.repository }}" "$TAG"

      - name: üè∑ Tag backend if version changed
        if: steps.backend.outputs.changed == 'true'
        env:
          PAT: ${{ secrets.PAT_WORKFLOW }}
        run: |
          TAG="backend/${{ steps.backend.outputs.new }}"
          echo "Creating tag $TAG"
          git tag "$TAG"
          git push "https://x-access-token:${PAT}@github.com/${{ github.repository }}" "$TAG"
