name: Auto Tag on Version Change

on:
  push:
    branches:
      - main

jobs:
  detect-and-tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write  # important pour pouvoir pousser des tags

    steps:
      - name: ⬇️ Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # nécessaire pour comparer l’historique

      - name: 🔍 Get previous commit
        id: prev
        run: echo "sha=$(git rev-parse HEAD~1)" >> $GITHUB_OUTPUT

      - name: 📦 Check client version change
        id: client
        run: |
          OLD_VERSION=$(git show ${{ steps.prev.outputs.sha }}:client/package.json | jq -r .version)
          NEW_VERSION=$(jq -r .version client/package.json)
          echo "old=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT
          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: 📦 Check backend version change
        id: backend
        run: |
          OLD_VERSION=$(git show ${{ steps.prev.outputs.sha }}:server/package.json | jq -r .version)
          NEW_VERSION=$(jq -r .version server/package.json)
          echo "old=$OLD_VERSION" >> $GITHUB_OUTPUT
          echo "new=$NEW_VERSION" >> $GITHUB_OUTPUT
          if [ "$OLD_VERSION" != "$NEW_VERSION" ]; then
            echo "changed=true" >> $GITHUB_OUTPUT
          else
            echo "changed=false" >> $GITHUB_OUTPUT
          fi

      - name: 🏷 Tag client if version changed
        if: steps.client.outputs.changed == 'true'
        run: |
          TAG="client/${{ steps.client.outputs.new }}"
          echo "Creating tag $TAG"
          git tag $TAG
          git push origin $TAG

      - name: 🏷 Tag backend if version changed
        if: steps.backend.outputs.changed == 'true'
        run: |
          TAG="backend/${{ steps.backend.outputs.new }}"
          echo "Creating tag $TAG"
          git tag $TAG
          git push origin $TAG
