name: Auto Tag & Deploy on Version Change

on:
  push:
    branches:
      - main

jobs:
  detect-tag-and-deploy:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      actions: write  # n√©cessaire pour d√©clencher un autre workflow

    steps:
      - name: ‚¨áÔ∏è Checkout repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üß∞ Install jq
        run: sudo apt-get update && sudo apt-get install -y jq

      - name: üîß Configure git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git remote set-url origin \
            https://x-access-token:${{ secrets.PAT_WORKFLOW }}@github.com/${{ github.repository }}.git

      - name: üîç Get previous commit
        id: prev
        run: echo "sha=$(git rev-parse HEAD~1)" >> $GITHUB_OUTPUT

      - name: üì¶ Check client version
        id: client
        run: |
          OLD_VERSION=$(git show ${{ steps.prev.outputs.sha }}:client/package.json | jq -r .version)
          NEW_VERSION=$(jq -r .version client/package.json)
          echo "changed=$([ "$OLD_VERSION" != "$NEW_VERSION" ] && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: üì¶ Check backend version
        id: backend
        run: |
          OLD_VERSION=$(git show ${{ steps.prev.outputs.sha }}:server/package.json | jq -r .version)
          NEW_VERSION=$(jq -r .version server/package.json)
          echo "changed=$([ "$OLD_VERSION" != "$NEW_VERSION" ] && echo true || echo false)" >> $GITHUB_OUTPUT
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT

      - name: üè∑ Tag & Deploy Client
        if: steps.client.outputs.changed == 'true'
        run: |
          TAG="client/${{ steps.client.outputs.version }}"
          git tag "$TAG"
          git push origin "$TAG"
          gh workflow run "Deploy Frontend to Cloudflare Pages"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_WORKFLOW }}

      - name: üè∑ Tag & Deploy Backend
        if: steps.backend.outputs.changed == 'true'
        run: |
          TAG="backend/${{ steps.backend.outputs.version }}"
          git tag "$TAG"
          git push origin "$TAG"
          gh workflow run "Deploy Backend to Render"
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_WORKFLOW }}
